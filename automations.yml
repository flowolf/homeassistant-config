- alias: "Sunset"
  trigger:
    platform: sun
    event: sunset
    # summer
    #offset: "-00:15:00"
    # winter
    offset: "-00:45:00"
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {%- if states.automation.sunset.attributes.last_triggered -%}
            {{ (as_timestamp(now()) - as_timestamp(states.automation.sunset.attributes.last_triggered)) > 150 }}
          {%- else -%}
            true
          {%- endif -%}
      - condition: state
        entity_id: group.all_devices
        state: "home"
  action:
    service: script.sunset

- alias: "wakeup7"
  hide_entity: False
  initial_state: False
  trigger:
    platform: time
    hours: 6
    minutes: 45
    seconds: 10
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
    service: homeassistant.turn_on
    entity_id:
      - switch.wz_light_1
      - switch.wz_light_2

- alias: "tine_home"
  hide_entity: False
  trigger:
    platform: state
    entity_id: !secret tine_phone_tracker
    from: 'not_home'
    to: 'home'
  condition:
    condition: state
    entity_id: !secret flo_phone_tracker
    state: 'not_home'
  action:
    service: notify.jabber
    data:
      title: ""
      message: "Tine is home! :)"

- alias: "Update info"
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    service: notify.jabber
    data:
      title: "Update: "
      message: "New Home Assistant version available ({{states.updater.updater.state }})"

##automation 5:
##  alias: "Tree on"
##  hide_entity: False
##  trigger:
##    platform: time
##    hours: 16
##    minutes: 55
##    seconds: 10
##  condition:
##    condition: state
##    entity_id: group.all_devices
##    state: "home"
##  action:
##    - service: homeassistant.turn_on
##      entity_id:
##        - switch.christbaum
##    - service: notify.jabber
##      data:
##        title: ""
##        message: "Activated Christmas Tree"

## christmas lights Loggia
##automation 6:
##  alias: "Christmas lights on"
##  trigger:
##    platform: sun
##    event: sunset
##    offset: "00:20:00"
##  action:
##    service: homeassistant.turn_on
##    entity_id:
##      - switch.wz_light_1
##
##automation 7:
##  alias: "Christmas lights off"
##  trigger:
##    platform: sun
##    event: sunset
##    offset: "07:05:00"
##  action:
##    service: homeassistant.turn_off
##    entity_id:
##      - switch.wz_light_1
#
#- alias: "coming home"
#  hide_entity: False
#  trigger:
#    platform: state
#    entity_id: group.all_devices
#    from: 'not_home'
#    to: 'home'
#  condition:
#    condition: sun
#    after: sunset
#  action:
#    - service: notify.jabber
#      data:
#        title: ""
#        message: "welcome home! turning on lights"
#    - service: homeassistant.turn_on
#      entity_id:
#        - switch.wz_light_1
#        - switch.wz_light_2
#        - light.vzlicht_level

- alias: "coming home (turn on VZ light)"
  hide_entity: False
  trigger:
    platform: state
    entity_id: binary_sensor.wohnungstuer
    from: 'off'
    to: 'on'
  condition:
    condition: sun
    after: sunset
  action:
    - service: homeassistant.turn_on
      entity_id:
        - switch.wz_light_1
        - switch.wz_light_2
        - light.vzlicht_level

- alias: "welcome message for flo"
  hide_entity: False
  trigger:
    platform: state
    entity_id: !secret flo_phone_tracker
    from: 'not_home'
    to: 'home'
  action:
    - service: notify.jabber
      data:
        title: ""
        message: "Welcome Home Florian!"

- alias: "welcome message for tine"
  hide_entity: False
  initial_state: False
  trigger:
    platform: state
    entity_id: !secret tine_phone_tracker
    from: 'not_home'
    to: 'home'
  action:
    - service: notify.jabber
      data:
        title: ""
        message: "Welcome Home Tine!"

##- alias: "motion light"
##  initial_state: True
##  hide_entity: False
##  trigger:
##    platform: state
##    entity_id: sensor.upymotion1
##    state: "motion detected"
##  condition:
##    - condition: state
##      entity_id: sun.sun
##      state: "below_horizon"
###    - condition: state
###      entity_id: input_boolean.motion_lockout
###      state: "off"
##  action:
##    - service: light.turn_on
##      data:
##        entity_id: light.ledstrip
##

- alias: "Esstisch Lampe defekt"
  hide_entity: False
  trigger:
    platform: state
    entity_id: switch.esstisch_switch
    from: 'off'
    to: 'on'
    for:
      seconds: 5
  condition:
    - condition: numeric_state
      entity_id: sensor.esstisch_power
      above: 2
      below: 145
  action:
    - service: notify.jabber
      data:
        title: "Esszimmerlicht defekt"
        message: >
          "Birne wechseln!
          (OSRAM Classic 64542 P, E14 Halogen 30W/2700K, 405lm, kleine Birnenform"
#  condition:
#    condition: and
#    conditions:
#      - condition: template
#        value_template: >
#          {%- if states.automation.esstisch_lampe_defekt.attributes.last_triggered -%}
#            {{ (as_timestamp(now()) - as_timestamp(states.automation.esstisch_lampe_defekt.attributes.last_triggered)) > 15 }}
#          {%- else -%}
#            true
#          {%- endif -%}
#      - condition: numeric_state
#        entity_id: sensor.esstisch_power
#        below: 145
#        above: 2


#input_boolean:
#  motion_detected_1:
#    name: "Motion detected 1"
#    initial: off
#
#automation 15:
#  alias: "motion test"
#  trigger:
#    platform: state
#    entity_id: binary_sensor.wz_motion
#    state: 'on'
#  condition:
#    condition: and
#    conditions:
#      - condition: state
#        entity_id: switch.wz_vitrine
#        state: "off"
#  action:
#    - service: homeassistant.turn_on
#      entity_id: switch.wz_vitrine
#    - service: input_boolean.turn_on
#      entity_id: input_boolean.motion_detected_1
#
#
#automation 16:
#  alias: "motion test off"
#  trigger:
#    platform: state
#    entity_id: binary_sensor.wz_motion
#    state: 'off'
#    for:
#      seconds: 10
#  condition:
#    condition: state
#    entity_id: input_boolean.motion_detected_1
#    state: "on"
#  action:
#    - service: homeassistant.turn_off
#      entity_id: switch.wz_vitrine
#    - service: input_boolean.turn_off
#      entity_id: input_boolean.motion_detected_1

- alias: "set dark theme for the night"
  initial_state: True
  trigger: 
    - platform: time
      at: '21:00'
  action:
    - service: frontend.set_theme
      data:
        name: darkcyan

- alias: "set default theme for the day"
  initial_state: True
  trigger: 
    - platform: time
      at: '06:00'
  action:
    - service: frontend.set_theme
      data:
        name: default

- alias: "warn for open front door"
  initial_state: True
  trigger: 
    platform: state
    entity_id: binary_sensor.wohnungstuer
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 55
  action:
    service: notify.yessssms
    data:
      message: "Front door Open (> 1' 55\")"

## todo: figure out what sensor is used for zwave device battery
#- alias: "Battery low on door sensor"
#  initial_state: True
#  trigger:
#    platform: numeric_state
#    entity_id: zwave.tuer1
#    below: 90
#  action:
#    service: notify.jabber
#    data:
#      title: "Battery low"
#      message: "change battery on door sensor 1"
#
#- alias: "Media player paused/stopped"
#  trigger:
#    - platform: state
#      entity_id: media_player.osmcwaldo
#      from: 'playing'
#      to: 'idle'
##  condition:
##    - condition: state
##      entity_id: sun.sun
##      state: 'below_horizon'
#  action:
#      service: scene.turn_on
#      entity_id: scene.wz_normal

- alias: "auto media player lighting"
  trigger:
    - platform: state
      entity_id: media_player.osmcwaldo
      to: 'playing'
      from: 'idle'
      for:
        minutes: 2
  condition:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
  action:
      service: scene.turn_on
      entity_id: scene.wz_movies
